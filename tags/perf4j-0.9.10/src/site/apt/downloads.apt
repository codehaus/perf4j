  ---------
  Downloads
  ---------

Download Project Artifacts

* Release Versions

  <All release versions of Perf4J are available from the maven repository at:>
  <<{{http://repository.codehaus.org/org/perf4j/perf4j/}}>>

  * <<0.9.10>>

    * {{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10.jar}Main JAR archive}}
      ({{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10.jar.md5}MD5}})

    * {{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-log4jonly.jar}JAR archive containing log4j aspects and extensions but NOT extensions for other logging frameworks}}
      ({{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-log4jonly.jar.md5}MD5}})
      This jar is necessary when using the ajc AspectJ compiler and you want to only weave in the log4j aspects.

    * {{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-javalogonly.jar}JAR archive containing java.util.logging aspects and extensions but NOT extensions for other logging frameworks}}
      ({{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-javalogonly.jar.md5}MD5}})
      This jar is necessary when using the ajc AspectJ compiler and you want to only weave in the java.util.logging aspects.

    * {{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-commonslogonly.jar}JAR archive containing Apache Commons Logging aspects and extensions but NOT extensions for other logging frameworks}}
      ({{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-commonslogonly.jar.md5}MD5}})
      This jar is necessary when using the ajc AspectJ compiler and you want to only weave in the Apache Commons Logging aspects.

    * {{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-slf4jonly.jar}JAR archive containing SLF4J aspects and extensions but NOT extensions for other logging frameworks}}
      ({{{http://repository.codehaus.org/org/perf4j/perf4j/0.9.10/perf4j-0.9.10-slf4jonly.jar.md5}MD5}})
      This jar is necessary when using the ajc AspectJ compiler and you want to only weave in the SLF4J aspects.

  []

* Snapshot Versions

  <All SNAPSHOT versions built from the development trunk are available in the snapshot repository at:>
  <<{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/}}>>

  * <<0.9.11-SNAPSHOT>>

    * {{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT.jar}JAR archive}}
      ({{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT.jar.md5}MD5}})

    * {{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-log4jonly.jar}JAR archive containing log4j aspects}}
      ({{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-log4jonly.jar.md5}MD5}})

    * {{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-javalogonly.jar}JAR archive containing java.util.logging aspects}}
      ({{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-javalogonly.jar.md5}MD5}})

    * {{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-commonslogonly.jar}JAR archive containing Apache Commons Logging aspects}}
      ({{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-commonslogonly.jar.md5}MD5}})

    * {{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-slf4jonly.jar}JAR archive containing SLF4J aspects}}
      ({{{http://snapshots.repository.codehaus.org/org/perf4j/perf4j/0.9.11-SNAPSHOT/perf4j-0.9.11-SNAPSHOT-slf4jonly.jar.md5}MD5}})
       
* Maven Dependencies and Ant

  If you are using Perf4J in a project built with Maven, you will need to add the following entries to the dependencies
  section of your pom.xml file. Note that some dependencies are optional depending on the Perf4J features used:

+-----------------------------------------------------------------------------+

    <dependency>
        <groupId>org.perf4j</groupId>
        <artifactId>perf4j</artifactId>
        <version>0.9.10</version>
        <scope>compile</scope>
    </dependency>

    <!-- if you use the log4j implementation of Perf4J, you must also include this dependency -->
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.14</version>
        <scope>compile</scope>
    </dependency>

    <!-- if you use the commons logging implementation of Perf4J, you must also include this dependency -->
    <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.0.3</version>
        <scope>compile</scope>
    </dependency>

    <!-- if you use the SLF4J implementation of Perf4J, you must also include this dependency -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.5.6</version>
        <scope>compile</scope>
    </dependency>

    <!-- if you use the AOP functionality of Perf4J, you must also include these 2 dependencies -->
    <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>1.6.1</version>
        <scope>runtime</scope>
    </dependency>

    <dependency>
        <groupId>commons-jexl</groupId>
        <artifactId>commons-jexl</artifactId>
        <version>1.1</version>
        <scope>runtime</scope>
    </dependency>

    <!-- if you use Spring to manage the AOP funcionality, you must also include these 2 dependencies -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring</artifactId>
        <version>2.0.6</version>
        <scope>runtime</scope>
    </dependency>

    <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>2.1_3</version>
        <scope>runtime</scope>
    </dependency>
+-----------------------------------------------------------------------------+

  Alternatively, if you are building your project with Ant, you can use
  {{{http://maven.apache.org/ant-tasks/index.html}Maven's Ant tasks}} to pull the required dependencies for your build.
  Once you have {{{http://maven.apache.org/ant-tasks/installation.html}installed}} the tasks, you can add the following
  lines to your build file:

+-----------------------------------------------------------------------------+
    <!-- Maven's dependencies task pulls down the jar files to a local directory -->
    <artifact:dependencies pathId="perf4j.classpath">
        <dependency groupId="org.perf4j" artifactId="perf4j" version="0.9.10" scope="compile"/>
        <!-- This dependency is only required if using log4j extensions in perf4j -->
        <dependency groupId="log4j" artifactId="log4j" version="1.2.14" scope="compile"/>
        <!-- This dependency is only required if using commons logging extensions in perf4j -->
        <dependency groupId="commons-logging" artifactId="commons-logging" version="1.0.3" scope="compile"/>
        <!-- This dependency is only required if using slf4j extensions in perf4j -->
        <dependency groupId="org.slf4j" artifactId="slf4j-api" version="1.5.6" scope="compile"/>
        <!-- These 2 dependencies only required if using AOP functionality in perf4j -->
        <dependency groupId="org.aspectj" artifactId="aspectjrt" version="1.6.1" scope="runtime"/>
        <dependency groupId="commons-jexl" artifactId="commons-jexl" version="1.1" scope="runtime"/>
        <!-- These 2 dependencies only required if using Spring to manage AOP -->
        <dependency groupId="org.springframework" artifactId="spring" version="2.0.6" scope="runtime"/>
        <dependency groupId="cglib" artifactId="cglib" version="2.1_3" scope="runtime"/>

        <!-- Declare the remore repositories from where dependencies are pulled -->
        <remoteRepository url="http://repository.codehaus.org/"/>
        <remoteRepository url="http://repo1.maven.org/maven2/"/>
    </artifact:dependencies>
+-----------------------------------------------------------------------------+
